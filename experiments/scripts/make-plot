#!/usr/bin/perl

# Arguments:
#
# 1. infile
# 2. outfile
# 3. vars (single variable or v1,v2 for comparison + ":scale")
# 4. Colour map
# 5. fill/lines
# 6. Min,max,step for levels
# 7. Label bar title (if missing, no label bar)
my $infile = $ARGV[0];
my $outfile = $ARGV[1];
my $vars = $ARGV[2];
my $cmap = $ARGV[3];
my $type = $ARGV[4];
my $levels = $ARGV[5];
my $lb_title = @ARGV >= 7 ? $ARGV[6] : "";

my ($fill, $lb);
$fill = ($type ne "lines") ? "True" : "False";
$lb = ($lb_title ne "") ? "True" : "False";
my ($min_level, $max_level, $level_spacing) = split(/,/, $levels);
my ($comp, $invar, $invar1, $invar2, $scale);
if ($vars =~ /:/) {
    ($vars, $scale) = split(/:/, $vars);
} else {
    $scale = "1.0";
}
if ($vars =~ /,/) {
    $comp = "True";
    ($invar1, $invar2) = split(/,/, $vars);
} else {
    $comp = "False";
    $invar = $vars;
}

print "infile=$infile\n";
print "outfile=$outfile\n";
print "comp=$comp\n";
if ($comp eq "True") {
    print "invar1=$invar1\n";
    print "invar2=$invar2\n";
} else {
    print "invar=$invar\n";
}
print "scale=$scale\n";
print "cmap=$cmap\n";
print "fill=$fill\n";
print "level_spacing=$level_spacing\n";
print "min_level=$min_level\n";
print "max_level=$max_level\n";
print "lb=$lb\n";
print "lb_title=$lb_title\n";

open PH, "|ncl";
print PH <<"EOF";
load "\$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_code.ncl"
load "\$NCARG_ROOT/lib/ncarg/nclscripts/csm/gsn_csm.ncl"
load "\$NCARG_ROOT/lib/ncarg/nclscripts/csm/contributed.ncl"

infile = "$infile"
comp = $comp
invar = "$invar"
invar1 = "$invar1"
invar2 = "$invar2"
scale = $scale
outfile = "$outfile"
cmap = "$cmap"
fill = $fill
level_spacing = $level_spacing
min_level = $min_level
max_level = $max_level
lb = $lb
lb_title = "$lb_title"

begin
  fp = addfile(infile, "r")
  if (comp) then
    v1 = fp->\$invar1\$
    v2 = fp->\$invar2\$
    v = (v1 - v2) / scale
    copy_VarCoords(v1, v)
  else
    vin = fp->\$invar\$
    v = vin / scale
    copy_VarCoords(vin, v)
  end if

  wks = gsn_open_wks("ps", outfile)
  gsn_define_colormap(wks, cmap)
  NhlSetColor(wks, 255, 192/255.0, 192/255.0, 192/255.0)

  plots = new(4, graphic)
  panel_labels = new(4, string)

  seas_labels = (/ "DJF", "MAM", "JJA", "SON" /)

  res = True

  res\@tiMainString = ""
  res\@tiYAxisString = ""
  res\@tiXAxisString = ""
  res\@gsnLeftString = ""
  res\@gsnRightString = ""
  res\@gsnSpreadColors = True
  res\@gsnSpreadColorEnd = 253
  res\@cnLevelSelectionMode = "ManualLevels"
  res\@cnLevelSpacingF = level_spacing
  res\@cnMinLevelValF = min_level
  res\@cnMaxLevelValF = max_level
  if (fill) then
    res\@cnLineLabelsOn = False
    res\@cnFillOn = True
    res\@cnLinesOn = False
  else
    res\@cnLineLabelPlacementMode = "Computed"
    res\@cnInfoLabelOn = False
    res\@cnFillOn = False
  end if
  res\@cnLineThicknessF = 0.125

  res\@mpLandFillColor = 255

  res\@lbLabelBarOn = False

  res\@gsnDraw = False
  res\@gsnFrame = False

  res\@tmXTOn = False
  res\@tmXBOn = False
  res\@tmYLOn = False
  res\@tmYROn = False

  pi = 0
  do row = 0, 1
    do col = 0, 1
      plots(pi) = gsn_csm_contour_map_ce(wks, v(pi, :, :), res)
      panel_labels(pi) = seas_labels(pi)
      pi = pi + 1
    end do
  end do

  pw = 0.475284
  ph = 0.237642
  pgapx = 0.024716
  pgapy = 0.024716
  px1 = 0.019814
  py1 = 0.98
  panelx = new(4, float)
  panely = new(4, float)
  pidx = 0
  do r = 0, 1
    do c = 0, 1
      panelx(pidx) = px1 + (pw + pgapx) * c
      panely(pidx) = py1 - (ph + pgapy) * r
      pidx = pidx + 1
    end do
  end do

  pres = True
;  pres\@gsnPanelDebug = True
  pres\@gsnPanelXF = panelx
  pres\@gsnPanelYF = panely
  pres\@gsnFrame = False
  pres\@gsnPanelFigureStrings = panel_labels
  pres\@gsnPanelFigureStringsPerimOn = False
  pres\@gsnPanelFigureStringsPerimSpaceF = 0.125
  pres\@gsnPanelFigureStringsFontHeightF = 0.01
  pres\@amJust = "BottomLeft"
  gsn_panel(wks, plots, (/ 2, 2 /), pres)

  if (lb) then
    contour = get_overlay_plot(plots(0), "contourPlotClass", 0)
    getvalues contour
      "cnLevels": lblevels
      "cnFillColors": lbcolors
    end getvalues

    do idx = 0, dimsizes(lblevels) - 1
      if (abs(lblevels(idx)) .lt. 0.001) then
        lblevels(idx) = 0.0
      end if
    end do

    lbres = True
    lbw = 0.7
    lbh = 0.05
    lbres\@vpWidthF = lbw
    lbres\@vpHeightF = lbh
    lbres\@lbMonoFillPattern = True
    lbres\@lbLabelFontHeightF = 0.015
    lbres\@lbLabelAlignment = "InteriorEdges"
    lbres\@lbPerimOn = False
    lbres\@lbOrientation = "Horizontal"
    lbres\@lbFillColors = lbcolors
    lbres\@lbTitleString = lb_title
    lbres\@lbTitleFontHeightF = 0.015
    lbres\@lbTitleOffsetF = 0.2
    lbres\@lbTitlePosition = "Bottom"
    lbres\@lbLabelStride = 2
    lblabels = new(dimsizes(lblevels), string)
    lblabels = lblevels

    lbx = (1.0 - lbw) / 2.0
    lby = 0.44
    gsn_labelbar_ndc(wks, dimsizes(lbcolors), lblabels, lbx, lby, lbres)
  end if

  frame(wks)
end
EOF

close PH;

system "ps2eps -f -l $outfile.ps";
system "epstopdf $outfile.eps";
unlink "$outfile.ps";
unlink "$outfile.eps";
